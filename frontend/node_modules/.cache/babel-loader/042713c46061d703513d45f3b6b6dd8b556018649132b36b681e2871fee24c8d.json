{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\awnma\\\\Desktop\\\\Smart Portal\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n// Find the root element defined in index.html\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById('root');\n\n// Check if the root element exists before attempting to render\nif (rootElement) {\n  // Create a React root and render the App component\n  // Note: BrowserRouter is included inside App.jsx, but standard practice often includes it here.\n  // Given the single-file App.jsx structure, this standard bootstrap is used.\n  ReactDOM.createRoot(rootElement).render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this));\n} else {\n  // Log an error if the #root element is missing, though your index.html ensures it's present.\n  console.error(\"Root element with ID 'root' not found in the document.\");\n}","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","App","jsxDEV","_jsxDEV","rootElement","document","getElementById","createRoot","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","console","error"],"sources":["C:/Users/awnma/Desktop/Smart Portal/frontend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n// Find the root element defined in index.html\r\nconst rootElement = document.getElementById('root');\r\n\r\n// Check if the root element exists before attempting to render\r\nif (rootElement) {\r\n    // Create a React root and render the App component\r\n    // Note: BrowserRouter is included inside App.jsx, but standard practice often includes it here.\r\n    // Given the single-file App.jsx structure, this standard bootstrap is used.\r\n    ReactDOM.createRoot(rootElement).render(\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    );\r\n} else {\r\n    // Log an error if the #root element is missing, though your index.html ensures it's present.\r\n    console.error(\"Root element with ID 'root' not found in the document.\");\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;;AAEnD;AACA,IAAIF,WAAW,EAAE;EACb;EACA;EACA;EACAL,QAAQ,CAACQ,UAAU,CAACH,WAAW,CAAC,CAACI,MAAM,cACnCL,OAAA,CAACL,KAAK,CAACW,UAAU;IAAAC,QAAA,eACbP,OAAA,CAACF,GAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CACtB,CAAC;AACL,CAAC,MAAM;EACH;EACAC,OAAO,CAACC,KAAK,CAAC,wDAAwD,CAAC;AAC3E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}